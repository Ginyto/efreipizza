@page "/"


<PageTitle>Efrei Pizza</PageTitle>


<div id="zone">

    <div id="top">
        <h1> ❇️ @Luigi.Name ❇️ </h1>

        @refresh()

        @* <div>
            @foreach (Deliver d in Luigi.delivers)
            {
                <div class="pizza">
                    <div>@d.Name</div>
                    <div>@d.FirstName</div> / 
                    
                </div>
            }
        </div> *@

        <div>Stats -> @Luigi.PrintPizzeria() moyenne Client : @moyenneScore() moyenne Command : @moyenneCommand() </div>
    </div>

    <div id="body">

        <div id="searchbar">
            <input type="text" class="saisieInput" placeholder="Phone number client" @bind="search" @bind:event="oninput"/>
            @* <button @onclick="change" class="btn">altern</button> *@
        </div>

        <div id="client">

            @if (!onlist)
            {   
                <div id="tri">
                    @if (search == "commis")
                    {
                        @foreach (Commis d in Luigi.commiss)
                        {
                            int count = 0;
                            <div class="client">
                                @d.Name
                                @d.FirstName
                                @foreach (Command c in Luigi.commands) { if (c.Commis == d) { count++; } } ➡️ @count
                            </div>
                        }
                    }
                    @if (search == "deliver")
                    {
                        @foreach (Deliver d in Luigi.delivers)
                        {
                            int count = 0;

                            <div class="client">
                                @d.Name
                                @d.FirstName
                                @foreach(Command c in Luigi.commands){if(c.Deliver == d){count++;}} ➡️ @count
                            </div>
                        }
                    }
                </div>

                <div id="addclient">


                    <div id="saisie">

                        <button class="btn" @onclick="personnels"> Personnels </button>

                        <h2> @if (!personnel) { <span> 🍕 New Client 🍕</span> } else { <span> 👤 New Personnal 👤</span> } </h2>
                        

                        <input type="text" class="saisieInput" placeholder="Name" @bind="client.Name" @bind:event="oninput">

                        <input type="text" class="saisieInput" placeholder="Firstname" @bind="client.FirstName" @bind:event="oninput">

                        @if (!personnel)
                        {
                            <input type="text" class="saisieInput" placeholder="Address" @bind="client.Address" @bind:event="oninput">

                            <input type="text" class="saisieInput" placeholder="Phone" @bind="client.Phone" @bind:event="oninput">

                            

                            <button class="btn" @onclick="AddClient">Add client</button>
                        }
                        else
                        {
                            <select class="saisieselect" @bind="role" @bind:event="oninput">
                                <option value="0"> 🚲 Deliver 🚲</option>
                                <option value="1">🧑‍🍳 Commis 🧑‍🍳</option>
                            </select>

                            <button class="btn" @onclick="addPersonnel">Add personnal</button>
                        }


                    </div>

                </div>

            }

            @if (onlist)
            {
                <div id="takeorder">

                    <div id="CurrentClient">

                        <div>@CurrentClient.Name</div>
                        <div>@CurrentClient.FirstName</div>
                        
                    </div>
                    
                    <div id="saisie">
    
                        <h2> 🍕 Take an order 🍕 </h2>
    
                        <div class="select">

                            <button class="btn minus" @onclick="delPizza">-</button>

                            <select class="saisieselect" @bind="choicePizza" @bind:event="oninput">
                                <option value="1">🍕 Margherita </option>
                                <option value="2">🍕 Napolitaine </option>
                                <option value="3">🍕 Calzone </option>
                                <option value="4">🍕 Reine </option>
                            </select>

                                <select class="saisieselect" @bind="choicePizzaSize" @bind:event="oninput">
                                <option value="S">Small 😀</option>
                                <option value="M">Medium 😃</option>
                                <option value="L">Large 😄</option>
                                <option value="XL">Extra Large 😋</option>
                            </select>

                            <button class="btn plus" @onclick="addPizza">+</button>

                        </div>

                        <div class="select">

                            <button class="btn minus" @onclick="delDrink">-</button>

                            <select class="saisieselect" @bind="choiceDrink" @bind:event="oninput">
                                <option value="1">🥤 Coca </option>
                                <option value="2">🥤 Fanta </option>
                                <option value="3">🥤 Sprit </option>
                                <option value="4">🥤 Eau </option>
                            </select>

                            <select class="saisieselect" @bind="choiceDrinkSize" @bind:event="oninput">
                                <option value="S">Small 😀</option>
                                <option value="M">Medium 😃</option>
                                <option value="L">Large 😄</option>
                                <option value="XL">Extra Large 😋</option>
                            </select>

                            <button class="btn plus" @onclick="addDrink">+</button>

                        </div>

                        <div id="direction">
                                    <select class="saisieselect" @bind="commisId" @bind:event="oninput">

                                    @foreach (Commis element in Luigi.commiss)
                                    {
                                        <option value="@element.Id"> @element.Id @element.Name @element.FirstName  </option>

                                        if (element.Id == commisId)
                                        {
                                            commis = element;
                                        }



                                    }

                                </select>

                                <select class="saisieselect" @bind="deliverId" @bind:event="oninput">

                                    @foreach (Deliver element in Luigi.delivers)
                                    {
                                        <option value="@element.Id">@element.Id @element.Name @element.FirstName</option>

                                        if (element.Id == deliverId)
                                        {
                                            deliver = element;
                                        }
                                    }

                                </select>
                        </div>

    
                        <button class="btn" @onclick="TakeOrder">Take order</button>
    
                    </div>

                    <div id="CurrentOrder">

                        <div>💵 = @Luigi.CurrentCommand.Price$</div>

                        <div id="item">
                            
                            <div class="items">
                            
                                🍕Pizzas🍕

                                @foreach (Pizza p in Luigi.CurrentCommand.Pizzas)
                                {
                                    <div class="pizzas">
                                        <div class="pizzas">@p.Name </div> :
                                        <div class="pizzas">@p.Size </div> : 
                                        <div class="pizzas">@p.Price </div>$ 
                                    </div>
                                }

                            </div>

                            <div class="items">

                                🥤Drinks🥤

                                @foreach (Drink d in Luigi.CurrentCommand.Drinks)
                                {
                                    <div class="drinks">
                                        <div class="drinks">@d.Name </div>-
                                        <div class="drinks">@d.Size </div>-
                                        <div class="drinks">@d.Price </div>$
                                    </div>
                                }

                            </div>

                        </div>

                        @* <div id="comdel">
                            <span>  @Luigi.CurrentCommand.Time @Luigi.CurrentCommand.Date </span>

                            @if (commis != null)
                            {
                                            <span>  @commis.Name @commis.FirstName</span>
                            }

                            @if (deliver != null)
                            {
                                    <span>@deliver.Name @deliver.FirstName</span>
                            }
                        </div> *@

                    </div>

                </div>
            }

            
        </div>

    </div>

    <div id="bot">

        <div id="listclient">

            <div id="stattiltle">
                <h2> 🍕 List of clients 🍕 </h2>
            </div>

            @foreach (Client client in Luigi.clients)
            {
                <div class="client">
                    
                    <div class="clientinfos">
                        @client.Id - @client.Name @client.FirstName @client.Address @client.Phone @client.Score$
                    </div>

                </div>
                    
            }

        </div>

        <div id="listcommand">

            <div class="stattiltle">
                <h2> 🍕 List of commands 🍕 </h2>
            </div>

            @foreach (Command command in Luigi.commands)
            {
                <div class="command">

                    <div class="commandinfos">
                        @command.Id - @command.Price$ - @command.Time @command.Date - 👤@command.Client.Name @command.Client.FirstName 🧑‍🍳@command.Commis.Name @command.Commis.FirstName 🚲@command.Deliver.Name @command.Deliver.FirstName
                        
                        <button class="btn" @onclick="() => CookingProcess(command.Id)">@command.State</button>
                    </div>
                </div>
            }
        
        </div>


    </div>

</div>



@code {

    Pizzeria Luigi = new Pizzeria("Chez Luigi");

    Client client = new Client();

    Client CurrentClient = new Client();

    Commis commis = new Commis();

    Deliver deliver = new Deliver();

    int commisId = 1;

    int deliverId = 1;

    int role = 0;

    int choicePizza = 1;

    string choicePizzaSize = "S";

    int choiceDrink = 1;

    string choiceDrinkSize = "S";

    bool onlist = false;

    bool personnel = false;

    string search = "";
    

    void tri(){

        if(search == "best"){

            Luigi.SortbyPrice();
        }
        else if(search == "name"){

            Luigi.SortbyName();
        }
        if (search == "city")
        {

            Luigi.SortbyCity();
        }
    }

    double moyenneScore(){

        double moyenne = 0;

        foreach (Client element in Luigi.clients)
        {
            moyenne += element.Score;
        }

        moyenne = moyenne / Luigi.clients.Count;

        return moyenne;
    }

    double moyenneCommand(){

        double moyenne = 0;

        foreach (Command element in Luigi.commands)
        {
            moyenne += element.Price;
        }

        moyenne = moyenne / Luigi.commands.Count;

        return moyenne;
    }


    async Task CookingProcess(int id)
    {

        if(Luigi.commands.Count > 0){

            Command commandToCook = (Command) Luigi.commands[id-1];

            @* Console.WriteLine(commandToCook.Price + "$ " + commandToCook.Time + " " + commandToCook.Date + " " + commandToCook.Client.Name + " " + commandToCook.Client.FirstName + " " + commandToCook.Commis.Name + " " + commandToCook.Commis.FirstName + " " + commandToCook.Deliver.Name + " " + commandToCook.Deliver.FirstName); *@

            if (commandToCook.State == "Ready To Cook ⚙️")
            {
                
                await Task.Delay(1000);
                commandToCook.State = "Cooked ✅ ";
                StateHasChanged();
            
                await Task.Delay(3000);
                commandToCook.State = "Ready To Deliver ⚙️";
                StateHasChanged();
            

                await Task.Delay(3000);
                commandToCook.State = "Delivered ✅";
                StateHasChanged();
            
                await Task.Delay(3000);
                commandToCook.State = "Ready To Pay ⚙️";
                StateHasChanged();
            
                await Task.Delay(3000);
                commandToCook.State = "Paid ✅";
                StateHasChanged();
            }
        
        }
    
    }

    void addPizza()
    {
        Pizza pizza = new Pizza(choicePizza, choicePizzaSize);

        Luigi.CurrentCommand.Pizzas.Add(pizza);
        Luigi.CurrentCommand.Price += pizza.Price;

    }

    void TakeOrder()
    {
        if (Luigi.CurrentCommand.Price > 0)
        {
            Luigi.CurrentCommand.Client = CurrentClient;
            Luigi.CurrentCommand.Commis = commis;
            Luigi.CurrentCommand.Deliver = deliver;

            CurrentClient.Score += Luigi.CurrentCommand.Price;

            Luigi.commands.Add(Luigi.CurrentCommand);

            Luigi.CurrentCommand.Id = Luigi.commands.Count;

            Luigi.CurrentCommand = new Command();
        }
    }

    void delPizza()
    {
        if (Luigi.CurrentCommand.Pizzas.Count > 0)
        {
            Pizza pizza = (Pizza) Luigi.CurrentCommand.Pizzas[Luigi.CurrentCommand.Pizzas.Count - 1];

            Luigi.CurrentCommand.Pizzas.RemoveAt(Luigi.CurrentCommand.Pizzas.Count - 1);

            Luigi.CurrentCommand.Price -= pizza.Price;
            
        }

    }

    void addDrink()
    {
        Drink drink = new Drink(choiceDrink, choiceDrinkSize);

        Luigi.CurrentCommand.Drinks.Add(drink);
        Luigi.CurrentCommand.Price += drink.Price;

    }

    void delDrink()
    {
        if (Luigi.CurrentCommand.Drinks.Count > 0)
        {
            Drink drink = (Drink)Luigi.CurrentCommand.Drinks[Luigi.CurrentCommand.Drinks.Count - 1];

            Luigi.CurrentCommand.Drinks.RemoveAt(Luigi.CurrentCommand.Drinks.Count - 1);

            Luigi.CurrentCommand.Price -= drink.Price;
        }
    }


    void SearchClient(){

        @* Console.WriteLine("SearchClient : -> " + search); *@
            
            foreach (Client c in Luigi.clients)
            {
                if (c.Phone == search)
                {
                    onlist = true;

                    CurrentClient = c;


                }
                else
                {
                    onlist = false;
                }
            }
        
        @* Console.WriteLine("Eureka : " + onlist); *@
    
    }


    void AddClient()
    {
        Luigi.CreateClient(client.Name, client.FirstName, client.Address, client.Phone);

        client.Name = "";
        client.FirstName = "";
        client.Address = "";
        client.Phone = "";

        @* Luigi.PrintUsers(Luigi.clients); *@
    }

    void addPersonnel()
    {
        if (role == 0)
        {
            @* Console.WriteLine("Add Deliver -> " + role); *@
            Luigi.CreateDeliver(client.Name, client.FirstName);
        }
        else
        {
            @* Console.WriteLine("Add Commis -> " + role); *@
            Luigi.CreateCommis(client.Name, client.FirstName);
        }

        client.Name = "";
        client.FirstName = "";

        
    }

    void change(){
        onlist = !onlist;
    }

    void personnels(){
        personnel = !personnel;
    }

    object refresh(){

        @* Console.WriteLine("start"); *@

        Client Bowser = Luigi.CreateClient("King", "Bowser", "Paris", "06");

        Commis Toad = Luigi.CreateCommis("Mushroom", "Toad");

        Deliver Peach = Luigi.CreateDeliver("Princess", "Peach");

        SearchClient();

        tri();

        @* Console.WriteLine("done"); *@

        return null;

    }



}


